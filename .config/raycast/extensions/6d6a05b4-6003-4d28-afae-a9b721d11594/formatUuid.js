"use strict";var o=Object.defineProperty;var n=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var c=Object.prototype.hasOwnProperty;var l=(e,t)=>{for(var r in t)o(e,r,{get:t[r],enumerable:!0})},d=(e,t,r,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of u(t))!c.call(e,s)&&s!==r&&o(e,s,{get:()=>t[s],enumerable:!(i=n(t,s))||i.enumerable});return e};var g=e=>d(o({},"__esModule",{value:!0}),e);var m={};l(m,{default:()=>p});module.exports=g(m);var a=require("@raycast/api");function f(e){let t=e.replace(/[^a-fA-F0-9]/g,"");if(t.length!==32)throw new Error("Invalid UUID format: must be 32 hexadecimal characters");return[t.substring(0,8),t.substring(8,12),t.substring(12,16),t.substring(16,20),t.substring(20,32)].join("-")}var p=async e=>{let{uuid:t}=e.arguments;if(!t){await(0,a.showToast)({style:a.Toast.Style.Failure,title:"No UUID provided"});return}let{defaultAction:r}=(0,a.getPreferenceValues)();try{let i=f(t);r==="copy"?await a.Clipboard.copy(i):r==="paste"&&await a.Clipboard.paste(i),await(0,a.showHUD)(`\u2705 ${r==="copy"?"Copied":"Pasted"} formatted UUID: ${i}`)}catch(i){await(0,a.showToast)({style:a.Toast.Style.Failure,title:"Formatting Error",message:String(i)})}};
